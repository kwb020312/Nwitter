{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","e","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","key","Profile","userName","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","Router","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c87f0b26.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"../fbase\";\r\n\r\nexport default function AuthForm() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const { name, value } = event.target;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        await authService.createUserWithEmailAndPassword(email, password);\r\n      } else {\r\n        await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          value={email}\r\n          placeholder=\"Email\"\r\n          required\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={password}\r\n          placeholder=\"Password\"\r\n          required\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"LogIn\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from \"../components/AuthForm\";\r\nimport { authService, firebaseInstance } from \"../fbase\";\r\n\r\nexport default function Auth() {\r\n  const onSocialClick = async (e) => {\r\n    const { name } = e.target;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"../fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Nweet({ nweetObj, isOwner }) {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onChange = (e) => {\r\n    setNewNweet(e.target.value);\r\n  };\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              onChange={onChange}\r\n              required\r\n              autoFocus\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"../fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function NweetFactory({ userObj }) {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (e) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (e) => {\r\n    setNweet(e.target.value);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n  const onFileChange = (e) => {\r\n    const theFile = e.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const { result } = finishedEvent.currentTarget;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearPhotoClick = () => setAttachment(null);\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Nweet from \"../components/Nweet\";\r\nimport NweetFactory from \"../components/NweetFactory\";\r\nimport { dbService } from \"../fbase\";\r\n\r\nexport default function Home({ userObj }) {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { authService, dbService } from \"../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Profile({ userObj, refreshUser }) {\r\n  const history = useHistory();\r\n  let userName;\r\n  if (userObj.displayName !== null) {\r\n    userName = userObj.displayName;\r\n  } else {\r\n    userName = userObj.email;\r\n  }\r\n  const [newDisplayName, setNewDisplayName] = useState(userName);\r\n\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const getMyNweets = async () => {\r\n    const nweets = await dbService\r\n      .collection(\"nweets\")\r\n      .where(\"creatorId\", \"==\", userObj.uid)\r\n      .orderBy(\"createdAt\")\r\n      .get();\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  });\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n    }\r\n    refreshUser();\r\n  };\r\n  const onChange = (e) => {\r\n    setNewDisplayName(e.target.value);\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          value={newDisplayName}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          className=\"formInput\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Navigation({ userObj }) {\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nexport default function Router({ isLoggedIn, userObj, refreshUser }) {\r\n  return (\r\n    <HashRouter>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport { authService } from \"../fbase\";\nimport Router from \"./Router\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <Router\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}